#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef READER17KSDK_SWIFT_H
#define READER17KSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Reader17kSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




@class UIViewController;
@class NSDictionary;
@class NSNumber;
@class UIView;

SWIFT_PROTOCOL("_TtP12Reader17kSDK16ReaderAdDelegate_")
@protocol ReaderAdDelegate <NSObject>
@optional
/// 展示视频广告
- (void)showRewardAdFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter completion:(void (^ _Nonnull)(BOOL))completion;
/// 每日首次打开阅读器弹窗广告
- (UIView * _Nonnull)newDayFirstOpenReaderAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
/// 章节内容广告
- (UIView * _Nonnull)readerContentAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter SWIFT_WARN_UNUSED_RESULT;
/// 书籍末页广告
- (UIView * _Nonnull)readerEndAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
/// 信息流广告
- (UIView * _Nonnull)cellAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nullable)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;
@protocol ReaderLifecycleDelegate;

SWIFT_CLASS("_TtC12Reader17kSDK12ReaderColSDK")
@interface ReaderColSDK : NSObject
/// 页面信息
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull pageMap;)
+ (NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)pageMap SWIFT_WARN_UNUSED_RESULT;
/// SDK 实例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ReaderColSDK * _Nonnull shared;)
+ (ReaderColSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 广告代理
@property (nonatomic, weak) id <ReaderAdDelegate> _Nullable readerAdDelegate;
/// 生命周期代理
@property (nonatomic, weak) id <ReaderLifecycleDelegate> _Nullable readerLifecycleDelegate;
/// 配置SDK
/// \param appid 渠道 申请获得
///
/// \param secret 渠道 申请获得
///
/// \param options 其它信息 {
/// “enableService” = “（0 或 1）” //是否显示联系客服入口 default  1
/// “servcie” = “urlStr” // 客服链接地址 默认使用SDK客服地址
/// }
///
- (void)configWithAppid:(NSString * _Nonnull)appid secret:(NSString * _Nonnull)secret options:(NSDictionary * _Nullable)options;
/// version
@property (nonatomic, readonly, copy) NSString * _Nullable version;
/// buildVersion
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
/// infoDictionary
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable infoDictionary;
/// 阅读定时处理
/// \code
/// Reader17kSDK.shared.config(readCycle: 10) { (parameter) in
///     print(parameter)
///     //  Prints {
///                 bookName = "\U9ed1\U6697\U81f3\U4e0a";//书名
///                 chapterName = "001 \U906d\U9047\U6076\U9b54";//章节名
///                 chapterTotalPages = 11;//章节内容分页数量
///                 pageInChapter = 8;// 当前正在阅读第几页（从1开始计数）
///                 time = 710000;// 已阅读时长 毫秒（关闭阅读器会重新计时）
///                 }
/// }
///
/// \endcode\param readCycle 周期 单位秒.
///
/// \param handler 闭包事件
///
- (void)configReadWithCycle:(NSInteger)cycle handler:(void (^ _Nonnull)(NSDictionary * _Nonnull))handler;
/// 阅读（一本书）退出回调
- (void)configReadQuitWithHandler:(void (^ _Nonnull)(NSDictionary * _Nonnull))handler;
/// 获取 单页面 （通常当作分页接入，例如顶部分栏的子页面）
- (UIViewController * _Nonnull)getHomePageVc SWIFT_WARN_UNUSED_RESULT;
/// 打开 SDK 主页（tabVC）
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller;
/// 打开书籍详情页
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller bookId:(NSInteger)bookId;
/// 打开SDK （target 跳转）
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller target:(NSString * _Nonnull)target;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_PROTOCOL("_TtP12Reader17kSDK23ReaderLifecycleDelegate_")
@protocol ReaderLifecycleDelegate <NSObject>
@optional
- (void)viewWillAppearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewDidAppearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewWillDisappearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewDidDisappearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
@end

























#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef READER17KSDK_SWIFT_H
#define READER17KSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Reader17kSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




@class UIViewController;
@class NSDictionary;
@class NSNumber;
@class UIView;

SWIFT_PROTOCOL("_TtP12Reader17kSDK16ReaderAdDelegate_")
@protocol ReaderAdDelegate <NSObject>
@optional
/// 展示视频广告
- (void)showRewardAdFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter completion:(void (^ _Nonnull)(BOOL))completion;
/// 每日首次打开阅读器弹窗广告
- (UIView * _Nonnull)newDayFirstOpenReaderAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
/// 章节内容广告
- (UIView * _Nonnull)readerContentAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter SWIFT_WARN_UNUSED_RESULT;
/// 书籍末页广告
- (UIView * _Nonnull)readerEndAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
/// 信息流广告
- (UIView * _Nonnull)cellAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nullable)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;
@protocol ReaderLifecycleDelegate;

SWIFT_CLASS("_TtC12Reader17kSDK12ReaderColSDK")
@interface ReaderColSDK : NSObject
/// 页面信息
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull pageMap;)
+ (NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)pageMap SWIFT_WARN_UNUSED_RESULT;
/// SDK 实例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ReaderColSDK * _Nonnull shared;)
+ (ReaderColSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 广告代理
@property (nonatomic, weak) id <ReaderAdDelegate> _Nullable readerAdDelegate;
/// 生命周期代理
@property (nonatomic, weak) id <ReaderLifecycleDelegate> _Nullable readerLifecycleDelegate;
/// 配置SDK
/// \param appid 渠道 申请获得
///
/// \param secret 渠道 申请获得
///
/// \param options 其它信息 {
/// “enableService” = “（0 或 1）” //是否显示联系客服入口 default  1
/// “servcie” = “urlStr” // 客服链接地址 默认使用SDK客服地址
/// }
///
- (void)configWithAppid:(NSString * _Nonnull)appid secret:(NSString * _Nonnull)secret options:(NSDictionary * _Nullable)options;
/// version
@property (nonatomic, readonly, copy) NSString * _Nullable version;
/// buildVersion
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
/// infoDictionary
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable infoDictionary;
/// 阅读定时处理
/// \code
/// Reader17kSDK.shared.config(readCycle: 10) { (parameter) in
///     print(parameter)
///     //  Prints {
///                 bookName = "\U9ed1\U6697\U81f3\U4e0a";//书名
///                 chapterName = "001 \U906d\U9047\U6076\U9b54";//章节名
///                 chapterTotalPages = 11;//章节内容分页数量
///                 pageInChapter = 8;// 当前正在阅读第几页（从1开始计数）
///                 time = 710000;// 已阅读时长 毫秒（关闭阅读器会重新计时）
///                 }
/// }
///
/// \endcode\param readCycle 周期 单位秒.
///
/// \param handler 闭包事件
///
- (void)configReadWithCycle:(NSInteger)cycle handler:(void (^ _Nonnull)(NSDictionary * _Nonnull))handler;
/// 阅读（一本书）退出回调
- (void)configReadQuitWithHandler:(void (^ _Nonnull)(NSDictionary * _Nonnull))handler;
/// 获取 单页面 （通常当作分页接入，例如顶部分栏的子页面）
- (UIViewController * _Nonnull)getHomePageVc SWIFT_WARN_UNUSED_RESULT;
/// 打开 SDK 主页（tabVC）
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller;
/// 打开书籍详情页
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller bookId:(NSInteger)bookId;
/// 打开SDK （target 跳转）
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller target:(NSString * _Nonnull)target;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_PROTOCOL("_TtP12Reader17kSDK23ReaderLifecycleDelegate_")
@protocol ReaderLifecycleDelegate <NSObject>
@optional
- (void)viewWillAppearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewDidAppearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewWillDisappearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewDidDisappearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
@end

























#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef READER17KSDK_SWIFT_H
#define READER17KSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Reader17kSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




@class UIViewController;
@class NSDictionary;
@class NSNumber;
@class UIView;

SWIFT_PROTOCOL("_TtP12Reader17kSDK16ReaderAdDelegate_")
@protocol ReaderAdDelegate <NSObject>
@optional
/// 展示视频广告
- (void)showRewardAdFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter completion:(void (^ _Nonnull)(BOOL))completion;
/// 每日首次打开阅读器弹窗广告
- (UIView * _Nonnull)newDayFirstOpenReaderAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
/// 章节内容广告
- (UIView * _Nonnull)readerContentAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter SWIFT_WARN_UNUSED_RESULT;
/// 书籍末页广告
- (UIView * _Nonnull)readerEndAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
/// 信息流广告
- (UIView * _Nonnull)cellAdViewFrom:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nullable)parameter renderSuccess:(void (^ _Nonnull)(CGSize))renderSuccess SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;
@protocol ReaderLifecycleDelegate;

SWIFT_CLASS("_TtC12Reader17kSDK12ReaderColSDK")
@interface ReaderColSDK : NSObject
/// 页面信息
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull pageMap;)
+ (NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)pageMap SWIFT_WARN_UNUSED_RESULT;
/// SDK 实例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ReaderColSDK * _Nonnull shared;)
+ (ReaderColSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 广告代理
@property (nonatomic, weak) id <ReaderAdDelegate> _Nullable readerAdDelegate;
/// 生命周期代理
@property (nonatomic, weak) id <ReaderLifecycleDelegate> _Nullable readerLifecycleDelegate;
/// 配置SDK
/// \param appid 渠道 申请获得
///
/// \param secret 渠道 申请获得
///
/// \param options 其它信息 {
/// “enableService” = “（0 或 1）” //是否显示联系客服入口 default  1
/// “servcie” = “urlStr” // 客服链接地址 默认使用SDK客服地址
/// }
///
- (void)configWithAppid:(NSString * _Nonnull)appid secret:(NSString * _Nonnull)secret options:(NSDictionary * _Nullable)options;
/// version
@property (nonatomic, readonly, copy) NSString * _Nullable version;
/// buildVersion
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
/// infoDictionary
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable infoDictionary;
/// 阅读定时处理
/// \code
/// Reader17kSDK.shared.config(readCycle: 10) { (parameter) in
///     print(parameter)
///     //  Prints {
///                 bookName = "\U9ed1\U6697\U81f3\U4e0a";//书名
///                 chapterName = "001 \U906d\U9047\U6076\U9b54";//章节名
///                 chapterTotalPages = 11;//章节内容分页数量
///                 pageInChapter = 8;// 当前正在阅读第几页（从1开始计数）
///                 time = 710000;// 已阅读时长 毫秒（关闭阅读器会重新计时）
///                 }
/// }
///
/// \endcode\param readCycle 周期 单位秒.
///
/// \param handler 闭包事件
///
- (void)configReadWithCycle:(NSInteger)cycle handler:(void (^ _Nonnull)(NSDictionary * _Nonnull))handler;
/// 阅读（一本书）退出回调
- (void)configReadQuitWithHandler:(void (^ _Nonnull)(NSDictionary * _Nonnull))handler;
/// 获取 单页面 （通常当作分页接入，例如顶部分栏的子页面）
- (UIViewController * _Nonnull)getHomePageVc SWIFT_WARN_UNUSED_RESULT;
/// 打开 SDK 主页（tabVC）
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller;
/// 打开书籍详情页
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller bookId:(NSInteger)bookId;
/// 打开SDK （target 跳转）
- (void)openColSdkFromViewController:(UIViewController * _Nonnull)controller target:(NSString * _Nonnull)target;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_PROTOCOL("_TtP12Reader17kSDK23ReaderLifecycleDelegate_")
@protocol ReaderLifecycleDelegate <NSObject>
@optional
- (void)viewWillAppearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewDidAppearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewWillDisappearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
- (void)viewDidDisappearWithViewController:(UIViewController * _Nonnull)viewController parameter:(NSDictionary * _Nonnull)parameter;
@end

























#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
